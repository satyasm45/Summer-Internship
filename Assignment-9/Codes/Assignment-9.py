# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RhG96scPc5fH1CrEui0knYsk5wiWqJP8
"""

#Code by Satya Sangram
#For Inequality 2.56
import matplotlib.pyplot as plt
from coeffs import *
import numpy as np

affine = np.array(([-1,2],[3,4]))
c =  np.array([-3,12])

#Original axes
points = np.array([[0, 0], [0, 9],[9, 0]])

#Transformed axes
affine_points = np.linalg.inv(affine)@(c+points).T
affine_points = affine_points.T

plt.figure(0)
#Filling up the desired region
plt.fill(affine_points[:,0], affine_points[:,1], 'k', alpha=0.3,label="pair1")

plt.xlabel('$x$');plt.ylabel('$y$')
plt.legend(loc='best')
plt.grid()


affine = np.array(([1,0],[0,1]))
c =  np.array([0,1])

#Original axes
points = np.array([[0, 0], [0, 5],[5,5 ],[5,0]])

#Transformed axes
affine_points = np.linalg.inv(affine)@(c+points).T
affine_points = affine_points.T

plt.figure(1)
#Filling up the desired region
plt.fill(affine_points[:,0], affine_points[:,1], 'r', alpha=0.3,label="pair2")

#show plot
plt.xlabel('$x$');plt.ylabel('$y$')
plt.legend(loc='best')
plt.grid()

plt.figure(2)
affine = np.array(([-1,2],[3,4]))
c =  np.array([-3,12])

#Original axes
points = np.array([[0, 0], [0, 15],[15, 0]])

#Transformed axes
affine_points = np.linalg.inv(affine)@(c+points).T
affine_points = affine_points.T


#Filling up the desired region
plt.fill(affine_points[:,0], affine_points[:,1], 'k', alpha=0.3,label="pair1")

affine = np.array(([1,0],[0,1]))
c =  np.array([0,1])

#Original axes
points = np.array([[0, 0], [0, 6],[6,6 ],[6,0]])

#Transformed axes
affine_points = np.linalg.inv(affine)@(c+points).T
affine_points = affine_points.T

#Filling up the desired region
plt.fill(affine_points[:,0], affine_points[:,1], 'r', alpha=0.3,label="pair2")

#show plot
plt.xlabel('$x$');plt.ylabel('$y$')
plt.legend(loc='best')
plt.grid()




plt.show()
